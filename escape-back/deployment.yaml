apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 1  # Adjust replicas as needed
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          #image: docker.io/hazemfelhi/appback:v2
          #image: docker.io/hazemfelhi/papello:vf
          #image: docker.io/hazemfelhi/papelloback
          #image: docker.io/hazemfelhi/back_papello
          #image: docker.io/hazemfelhi/back_ia:v1
          #image: docker.io/hazemfelhi/ia_back:v1
          #image: docker.io/hazemfelhi/ia_back:v2
          image: docker.io/hazemfelhi/ia_back:v3
          command: ["python"]
          args: ["manage.py", "runserver", "0.0.0.0:8000"]
          imagePullPolicy: "IfNotPresent"  # Replace with your Django Docker image name and tag
          ports:
            - containerPort: 8000  # Adjust port as per your Django app configuration
          envFrom:
          - secretRef:
              name: aws-credentials
          env:
            - name: POSTGRES_DB
              value: appdb  # Replace with your PostgreSQL database name
            - name: POSTGRES_USER
              value: devuser  # Replace with your PostgreSQL username
            - name: POSTGRES_PASSWORD
              value: changeme
            - name: POSTGRES_HOST
              value: postgresql  # Replace with your PostgreSQL service name in Kubernetes
            - name: POSTGRES_PORT
              value: "5432"  # Adjust if your PostgreSQL uses a different port
            - name: REDIS_HOST
              value: redis  # Ensure this matches your Redis service name
            - name: REDIS_PORT
              value: "6379"